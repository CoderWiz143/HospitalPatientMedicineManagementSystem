
import java.io.File;
import java.io.FileWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;
import static jdk.nashorn.internal.runtime.Debug.id;
import static org.omg.CORBA.BooleanSeqHelper.id;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Thinkpad
 */
public class CheckUp extends javax.swing.JFrame {

    ArrayList<Billinginfo> record= new ArrayList<>();
    ArrayList<Medicine> allMedicine = new ArrayList<>();
     ArrayList<patient> allpatient = new ArrayList<>();
    
    /**
     * Creates new form CheckUp
     */
    public CheckUp() {
        initComponents();
        ReadAllMdata();
        ReadAllPdata();
        loadMed();
    }
    
    void loadMed(){
        allm.removeAllItems();
        for(int i=0;i<allMedicine.size();i++){
            allm.addItem(allMedicine.get(i).getId()+";"+allMedicine.get(i).getName());
            
        }
    }
    
    void SaveAllMData() {
        try {
            FileWriter fileWriter = new FileWriter("mdata.txt");
        
        for(int i=0;i<allMedicine.size();i++){
            fileWriter.write(allMedicine.get(i).getId()+";"+allMedicine.get(i).getName()+";"+allMedicine.get(i).getSellingprice()+";"+allMedicine.get(i).getBuyingprice()+""+allMedicine.get(i).getQuantity()+";"+allMedicine.get(i).getDescription()+"\n");
        }
        fileWriter.close();
        } catch (Exception e) {
        }
    }
    
    void ReadAllMdata(){
        try {
            File mfile= new File("mdata.txt");
            Scanner scanner = new Scanner(mfile);
            
            while(scanner.hasNextLine()){
                
                String data = scanner.nextLine();
                
                String[] curData = data.split(";");
                Medicine medicine = new Medicine();
                medicine.setId(Integer.parseInt(curData[0]));
                
                medicine.setName(curData[1]);
                
                medicine.setSellingprice(Integer.parseInt(curData[2]));
                
                medicine.setBuyingprice(Integer.parseInt(curData[3]));
                 
                medicine.setQuantity(Integer.parseInt(curData[4]));
                medicine.setDescription(curData[5]);
                
                allMedicine.add(medicine);
                
                
            }
            scanner.close();
        } catch (Exception e) {
        }
    }
    
    void SaveAllPData() {
        try {
            FileWriter fileWriter = new FileWriter("pdata.txt");
        
        for(int i=0;i<allpatient.size();i++){
            fileWriter.write(allpatient.get(i).getID()+";"+allpatient.get(i).getName()+";"+allpatient.get(i).getAge()+";"+allpatient.get(i).getGender()+";"+allpatient.get(i).getAddress()+";"+allpatient.get(i).getContact()+"\n");
        }
        fileWriter.close();
        } catch (Exception e) {
        }
    }
    
    void ReadAllPdata(){
        try {
            File pfile= new File("pdata.txt");
            Scanner scanner = new Scanner(pfile);
            
            while(scanner.hasNextLine()){
                
                String data = scanner.nextLine();
                
                String[] curData = data.split(";");
                patient patient = new patient();
                patient.setID(Integer.parseInt(curData[0]));
                
                patient.setName(curData[1]);
                
                patient.setAge(Integer.parseInt(curData[2]));
                
                patient.setGender(curData[3]);
                 
                patient.setAddress(curData[4]);
                patient.setContact(curData[5]);
                
                allpatient.add(patient);
                
               
            }
             scanner.close();
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        fee = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rec = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        allm = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mlist = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Patient ID");

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel2.setText("Fee");

        jLabel3.setText("Recommendation");

        rec.setColumns(20);
        rec.setRows(5);
        jScrollPane1.setViewportView(rec);

        jLabel4.setText("Medicines");

        allm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("ADD Medicine");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Medicines List");

        mlist.setColumns(20);
        mlist.setRows(5);
        jScrollPane2.setViewportView(mlist);

        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Quantity");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fee, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                            .addComponent(id))
                        .addGap(107, 107, 107)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(allm, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(399, 399, 399)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(176, 176, 176))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(allm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(fee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(5, 5, 5)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(83, 83, 83))
        );

        jLabel6.setText("CheckUP Menu");

        jButton3.setText("Home");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(369, 369, 369)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jButton3))
                .addGap(58, 58, 58)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    boolean checkForQuantity(){
        
        int currtMid;
        currtMid = Integer.parseInt(allm.getSelectedItem().toString().split(";")[0]);
        for(int i=0;i<allMedicine.size();i++){
            if(currtMid==allMedicine.get(i).getId()){
                
                if(Integer.parseInt(quantity.getText())>allMedicine.get(i).getQuantity()){
                    return true;
                }
            }
            
        }
        
        return false;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(quantity.getText().equals("")||allm.getSelectedItem().toString().equals("")){
            JOptionPane.showMessageDialog(null, "plaese select Medicine or Enter Quantity");
        }
        else if(checkForQuantity()){
            
            JOptionPane.showMessageDialog(null, "Current Quantity is greater than available Quantity");
            
        }
        
        else{
            
            mlist.append(allm.getSelectedItem()+";"+quantity.getText());
            quantity.setText("");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

      void SaveAllData() {
        try {
            FileWriter fileWriter = new FileWriter("mdata.txt");
        
        for(int i=0;i<allMedicine.size();i++){
            fileWriter.write(allMedicine.get(i).getId()+";"+allMedicine.get(i).getName()+";"+allMedicine.get(i).getSellingprice()+";"+allMedicine.get(i).getBuyingprice()+""+allMedicine.get(i).getQuantity()+";"+allMedicine.get(i).getDescription()+"\n");
        }
        fileWriter.close();
        } catch (Exception e) {
        }
    }
      
        void SaveAllRData() {
        try {
            FileWriter fileWriter = new FileWriter("record.txt");
        
        for(int i=0;i<record.size();i++){
            fileWriter.append(record.get(i).getPatientID()+";"+record.get(i).getFee()+";"+record.get(i).getRecommendation()+";"+record.get(i).getDate()+";");
            
            ArrayList<Integer> temp = record.get(i).getMedicineID();
            
            for(int j=0;j<temp.size();j++){
                fileWriter.append(temp.get(j)+"");
            }
            fileWriter.append("\n");
        }
        fileWriter.close();
        } catch (Exception e) {
        }
    }
    
    boolean PatientidExist(){
        for(int i=0;i<allpatient.size();i++){
            
            
            if( id.getText().equals(allpatient.get(i).getID()+"")){
                return false;
            }
        }
        
        return true;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        if(id.getText().equals("")||fee.getText().equals("")||rec.getText().equals("")){
                JOptionPane.showMessageDialog(null, "All field are required ");
            }
        
        else if(PatientidExist()){
            JOptionPane.showMessageDialog(null, "patient ID don not exist ");
        }
        
        else{
            
            try {
              
            Billinginfo billinginfo = new Billinginfo();
            
            String Bill="";
            int total=0;
            billinginfo.setPatientID(Integer.parseInt(id.getText()));
            billinginfo.setFee(Integer.parseInt(fee.getText()));
            
            String[] Mdata=mlist.getText().split("\n");
            
            for(int i = 0 ;i<Mdata.length;i++){
                billinginfo.setMedicineID(Integer.parseInt(Mdata[i].split(";")[0]));
                int curQ= Integer.parseInt(Mdata[i].split(";")[2]);
                int curid= Integer.parseInt(Mdata[i].split(";")[0]);
                
                
                
                for(int j =0; j<allMedicine.size();j++){
                    if(allMedicine.get(i).getId()==curid){
                        
                        Bill+=allMedicine.get(j).getName()+"  =  "+allMedicine.get(j).getSellingprice()+"\n";
                        
                        total+=allMedicine.get(j).getSellingprice();
                        allMedicine.get(j).setQuantity(allMedicine.get(j).getQuantity()-curQ);
                    }
                }
            }
            
            billinginfo.setRecommendation(rec.getText());
            
            DateFormat cDateFormat = new SimpleDateFormat("dd:MM::yyyy");
            Date cdate = new Date();
            billinginfo.setDate(cDateFormat.format(cdate));
            
            record.add(billinginfo);
            
            SaveAllMData();
            SaveAllRData();
            
            Bill+="\nTotal Medicine = "+total;
            Bill+="\nDoctor  = "+fee.getText();
            
            Bill+="\nTOtal = "+(total+Integer.parseInt(fee.getText()));
            JOptionPane.showMessageDialog(null, "your Bill \n "+Bill);
            
            id.setText("");
            fee.setText("");
            rec.setText("");
            mlist.setText("");
            
              
            } catch (Exception e) {
                System.out.println(e);
            }
        }
            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Home_page().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> allm;
    private javax.swing.JTextField fee;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea mlist;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextArea rec;
    // End of variables declaration//GEN-END:variables
}
